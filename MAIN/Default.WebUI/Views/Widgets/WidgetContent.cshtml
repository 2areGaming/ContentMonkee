@model WidgetWrapperViewModel
@{
    var viewspath = "~/Views/" + _Globals.Instance.CurrentSiteSettingId + "/Widgets/WidgetContent.cshtml";
    var mappath = this.Server.MapPath(viewspath);
    if (System.IO.File.Exists(mappath))
    {
        @Html.Partial(viewspath, Model);
        return;
    }
}
@{
    var widget = Model.Widget as BAG.Common.Data.Entities.WidgetContent;
}
@if (Model.IsDesignMode)
{

    <text>
        <div class="cm-admin-widget">
            <h5>Content</h5>
            <hr />
            <div class="form-group">
                <label for="title" class="control-label col-sm-2">Title:</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control" id="title" name="title" value="@widget.Title" />
                </div>
            </div>

            <div class="form-group">
                <label for="content" class="control-label col-sm-2">Content:</label>
                <div class="col-sm-10">
                    <textarea class="form-control summernote" id="content" name="content">@widget.Content</textarea>
                </div>
            </div>
        </div>
    </text>

}
else
{
    <div class="cm-widget widget-content">
        <div class="container">
            @if (!string.IsNullOrWhiteSpace(widget.Title))
            {
                <h3>@Html.Raw(widget.Title)</h3>
            }
            @Html.Raw(widget.Content)
        </div>
    </div>
}