@model WidgetContainer
@{
    string classadd = "";
    if (Model.SiteId == Guid.Empty && Model.WidgetManagers.Count() > 0)
    {
        classadd = "tablesorter {sortlist: [[1,0]]}";
    }
}

<input id="widget-items" type="hidden" name="itemsstring" value="">


<table class="table table-hover @classadd">
    <input id="widgetListSelector" class="form-control search-listwidget" placeholder="search" onkeyup="widgetList.search(this.value)" onchange="widgetList.search(this.value)">
    <thead>
        <tr>
            <th></th>
            <th>Type</th>
            <th class="{sorter: false}">Pages/Widgets</th>
            <th class="{sorter: false}"></th>
        </tr>
    </thead>
    <tbody class="widget-items ui-sortable">
        @foreach (var widgetManager in Model.WidgetManagers)
        {


            var widget = widgetManager.PreRelease;
            string navhighlight = "";
            if (Model.Widgetnavigation != null && Model.Widgetnavigation.Contains(widget.Id))
            {
                navhighlight = "navigationpoint";
            }
            var default_class = (widget.IsDefaultPartial) ? "" : "warning-border";
            <tr class="item ui-sortable-handle @navhighlight widgetlist-search-handle" search-handle-name="@widget.Name.ToLower()" search-handle-type="@widget.Type.ToString().ToLower()" data-item-id="@widget.Id.ToString()">
                @{
                    var type = @widget.Type + ".svg";
                }
                @if (Model.SiteId == Guid.Empty)
                {
                    <td><a href="/admin/widgetedit/@widget.Id"><img src="/App_Themes/admin/img/widgets/@type" class="@default_class ">@widget.Name</a></td>
                }
                else
                {
                    <td><a href="/admin/widgetedit/@widget.Id?siteid=@Model.SiteId"><img src="/App_Themes/admin/img/widgets/@type" class="@default_class ">@widget.Name</a></td>
                }

                <td>@widget.Type</td>
                <td>
                    @{
                        var count = 0;
                        var html = string.Empty;
                        foreach (var site in @widget.Sites)
                        {
                            var name = string.IsNullOrEmpty(site.Name) ? "(leer)" : site.Name;
                            html += "<a class='btn btn-default btn-xs btn-block' href='/admin/siteedit/" + site.Id + "'>Site: " + name + "</a><div class'clearfix'><div>";
                            count++;
                        }
                        foreach (var compositesingle in Model.Widgets.Where(w => w.Type == "WidgetComposite"))
                        {
                            var composite = compositesingle as BAG.Common.Data.Entities.WidgetComposite;
                            if (composite.WidgetIds.Contains(widget.Id))
                            {
                                html += "<a class='btn btn-default btn-xs btn-block' href='/admin/widgetedit/" + composite.Id + "'>Widget: " + composite.Name + "</a><div class'clearfix'><div>";
                                count++;
                            }
                        }
                    }
                    <button class="btn btn-default btn-xs"
                            onclick="return false;"
                            data-toggle="popover"
                            data-html="true"
                            data-trigger="focus"
                            data-container="body"
                            title="Seiten"
                            data-content="@html">
                        @count
                    </button>

                </td>
                <td class="text-right">
                    @{
                        string showOrHideClass = widget.Visible ? "fa-toggle-on" : "fa-toggle-off";
                        string showOrHideElementId = widget.Id + "_showOrHide";
                    }


                    @if (Model.SiteId == Guid.Empty)
                    {
                        <a class="btn btn-default btn-xs" href="/admin/widgetedit/@widget.Id" data-toggle="tooltip" title="Edit">
                            <i class="fa fa-pencil"></i>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-default btn-xs" href="/admin/widgetedit/@widget.Id?siteid=@Model.SiteId" data-toggle="tooltip" title="Edit">
                            <i class="fa fa-pencil"></i>
                        </a>
                    }
                    
                    <div class="btn btn-default btn-xs" href="#" data-toggle="tooltip" title="show or hide on website">
                        <i id="@showOrHideElementId" class="fa @showOrHideClass" onclick="widgetList.toggleShowOrHide(this.id, '/admin/WidgetToggleVisibility/@widget.Id')"></i>
                    </div>
                    <a class="btn btn-default btn-xs" href="/admin/widgetreset/@widget.Id?siteid=@Model.SiteId" data-toggle="tooltip" title="Reset"><i class="fa fa-refresh"></i></a>

                    &nbsp;
                    <a class="btn btn-default btn-xs @(widgetManager.IsDistinct?"btn-warning":"")" href="/admin/widgetpublish/@widget.Id?siteid=@Model.SiteId">Publish</a>

                    &nbsp;
                    <a class="btn btn-danger btn-xs delete-confirm"
                       data-action="/admin/widgetdelete"
                       data-id="@widget.Id"
                       data-siteid="@Model.SiteId"
                       data-title="Delete Widget"
                       data-description="Do you really want to delete the widget @widget.Name?"
                       data-toggle="tooltip"
                       title="Delete">
                        <i class="fa fa-trash-o"></i>
                    </a>
                </td>
            </tr>
                        }
    </tbody>
</table>

<script>

    var widgetList = {
        toggleShowOrHide: function (id, url) {
            var className = document.getElementById(id).className;
            var addClass = 'fa-toggle-off';
            if (className.includes('fa-toggle-off')) {
                addClass = 'fa-toggle-on';
            }
            className = className.replace('fa-toggle-off', '').replace('fa-toggle-on', '');
            className += addClass;
            document.getElementById(id).className = className;

            $.post(url, function (data) {
                return;
            });
        },
        search: function (input) {
            input = input.toLowerCase().trim();
            $('.widgetlist-search-handle').each(function (id) {
                var name = $(this).attr('search-handle-name');
                var type = $(this).attr('search-handle-type');
                var show = name.includes(input) || type.includes(input);
                if (show) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }
    }


</script>