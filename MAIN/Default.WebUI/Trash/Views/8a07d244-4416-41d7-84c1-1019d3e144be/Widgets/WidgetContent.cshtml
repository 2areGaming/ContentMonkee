@using System.Text.RegularExpressions
@model WidgetWrapperViewModel
@{
    var widget = Model.Widget as BAG.Common.Data.Entities.WidgetContent;
}
@if (Model.IsDesignMode)
{

    <text>
        <div class="cm-admin-widget">
            <h5>Content</h5>
            <hr />
            <div class="form-group">
                <label for="title" class="control-label col-sm-2">Title:</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control" id="title" name="title" value="@widget.Title" />
                </div>
            </div>

            <div class="form-group">
                <label for="content" class="control-label col-sm-2">Content:</label>
                <div class="col-sm-10">
                    <textarea class="form-control summernote" id="content" name="content">@widget.Content</textarea>
                </div>
            </div>
        </div>
    </text>

}
else
{
    <div class="cm-widget widget-content">
        <div class="container">
            @*<h2>@Html.Raw(widget.Title)</h2>*@
            @Html.Raw(string.IsNullOrWhiteSpace(widget.Content) ? string.Empty : Regex.Replace(widget.Content, @"[0-9a-zA-Z]{8}(-)[0-9a-zA-Z]{4}(-)[0-9a-zA-Z]{4}(-)[0-9a-zA-Z]{4}(-)[0-9a-zA-Z]{12}|(tcSitesettingID)", _Globals.Instance.CurrentSiteSettingId.ToString()))
        </div>
    </div>
}